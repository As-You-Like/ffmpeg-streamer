<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title><%= title %></title>
    <link rel="stylesheet" href="/mdl/material-icons.css"/>
    <link rel="stylesheet" href="/mdl/material.grey-blue.min.css"/>
    <style>

        .mdl-grid {
            background: grey;
        }

        .mdl-cell {
            background: black;
            color: white;
        }

        .mdl-cell > span {
            display: block;
            max-height: 240px;
            width: 100%;
            overflow: auto;
            padding: 5px;
        }

        .mdl-cell.player {
            text-align: center;
        }

        .mdl-cell.data {
            display: flex;
            align-items: center;
            text-align: left;
            padding: 5px;
        }

        .form {
            background: none;
            text-align: center;
        }

        .form button {
            min-width: 200px;
            min-height: 50px;
        }

        .mdl-card__media {
            margin: 0;
            background: none;
            height: 100%;
        }

        .mdl-card__media > img, .mdl-card__media > video {
            width: 100%;
            margin: 0;
            padding: 0;
            background: black;
        }

        .mdl-card__supporting-text {
            color: white;
        }

    </style>
    <script defer src="/mdl/material.min.js"></script>
    <script src="/assets/flv.min.js"></script>
    <script src="/assets/hls.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>

<div class="content-grid mdl-grid">

    <div class="mdl-card mdl-shadow--16dp mdl-cell mdl-cell--4-col player">
        <figure class="mdl-card__media">
            <img id="mjpegImg" src="/mjpeg/test.mjpg"/>
        </figure>
        <div class="mdl-card__supporting-text">
            mjpeg src: <a href="/mjpeg/test.mjpg">test.mjpg</a>
        </div>
    </div>

    <div class="mdl-card mdl-shadow--16dp mdl-cell mdl-cell--4-col player">
        <figure class="mdl-card__media">
            <video id="mp4Video" muted autoplay src="/mp4/test.mp4" type="video/mp4"/>
        </figure>
        <div class="mdl-card__supporting-text">
            mp4 src: <a href="/mp4/test.mp4">test.mp4</a>
        </div>
    </div>

    <div class="mdl-card mdl-shadow--16dp mdl-cell mdl-cell--4-col player">
        <figure class="mdl-card__media">
            <video id="hlsjsVideo" muted autoplay/>
        </figure>
        <div class="mdl-card__supporting-text">
            hls.js src: <a href="/hls/test.m3u8">test.m3u8</a>
        </div>
    </div>

    <div class="mdl-card mdl-shadow--16dp mdl-cell mdl-cell--4-col player">
        <figure class="mdl-card__media">
            <img id="jpegImg"/>
        </figure>
        <div class="mdl-card__supporting-text">
            jpeg via socket.io
        </div>
    </div>

    <div class="mdl-card mdl-shadow--16dp mdl-cell mdl-cell--4-col player">
        <figure class="mdl-card__media">
            <video id="flvjsVideo" muted autoplay/>
        </figure>
        <div class="mdl-card__supporting-text">
            flv.js src: <a href="/mp4/test.mp4">test.mp4</a>
        </div>
    </div>

    <div class="mdl-card mdl-shadow--16dp mdl-cell mdl-cell--4-col player">
        <figure class="mdl-card__media">
            <video id="mseVideo" muted autoplay/>
        </figure>
        <div class="mdl-card__supporting-text">
            mse via socket.io
        </div>
    </div>

    <div class="mdl-shadow--16dp mdl-cell mdl-cell--8-col data">
        <span><%= params %></span>
    </div>

    <div class="mdl-shadow--16dp mdl-cell mdl-cell--4-col data">
        <span id="mime">codec info...</span>
    </div>

    <div class="mdl-shadow--16dp mdl-cell mdl-cell--6-col data">
        <span id="stderr">ffmpeg stderr...</span>
    </div>

    <div class="mdl-shadow--16dp mdl-cell mdl-cell--3-col data">
        <span id="progress">ffmpeg progress...</span>
    </div>

    <div class="mdl-shadow--16dp mdl-cell mdl-cell--3-col data">
        <span id="m3u8">m3u8 playlist...</span>
    </div>

    <div class="mdl-cell mdl-cell--12-col form">
        <form method="POST" action="/">
            <button name="action" type="submit" value="Exit"
                    class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent"><i
                        class="material-icons">clear</i></button>
            <button name="action" type="submit" value="Stop"
                    class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent"><i
                        class="material-icons">stop</i></button>
        </form>
    </div>
</div>
<script>
    const flvjsVideo = document.getElementById('flvjsVideo');
    if (flvjs.isSupported()) {
        const flvPlayer = flvjs.createPlayer({
            type: 'mp4',
            url: '/mp4/test.mp4',
            isLive: true
        });
        flvPlayer.attachMediaElement(flvjsVideo);
        flvPlayer.load();
        flvPlayer.play();
    } else {
        flvjsVideo.parentElement.innerHTML = '<p>flv.js not supported</p>';
    }
</script>
<script>
    const hlsjsVideo = document.getElementById('hlsjsVideo');
    if (Hls.isSupported()) {
        const hls = new Hls();
        hls.loadSource('/hls/test.m3u8');
        hls.attachMedia(hlsjsVideo);
        hls.on(Hls.Events.MANIFEST_PARSED, function () {
            hlsVideo.play();
        });
    } else {
        hlsjsVideo.parentElement.innerHTML = '<p>hls.js not supported</p>';
    }
</script>
<script>
    const jpegImg = document.getElementById('jpegImg');
    const jpegSocket = io.connect(`${location.origin}/jpeg`, {
        transports: ['websocket'],
        forceNew: true,
        reconnection: true,
        reconnectionDelay: 500
    });
    jpegSocket.on('jpeg', function (data) {
        const arrayBufferView = new Uint8Array(data);
        const blob = new Blob([arrayBufferView], {type: 'image/jpeg'});
        const urlCreator = window.URL || window.webkitURL;
        const imageUrl = urlCreator.createObjectURL(blob);
        jpegImg.src = imageUrl;
    });
</script>
<script>
    const progress = document.getElementById('progress');
    const progressSocket = io.connect(`${location.origin}/progress`, {
        transports: ['websocket'],
        forceNew: true,
        reconnection: true,
        reconnectionDelay: 500
    });
    progressSocket.on('progress', function (data) {
        progress.innerText = data;
    });
</script>
<script>
    const m3u8 = document.getElementById('m3u8');
    const m3u8Socket = io.connect(`${location.origin}/m3u8`, {
        transports: ['websocket'],
        forceNew: true,
        reconnection: true,
        reconnectionDelay: 500
    });
    m3u8Socket.on('m3u8', function (data) {
        m3u8.innerText = data;
    });
</script>
<script>
    const mime = document.getElementById('mime');
    const mimeSocket = io.connect(`${location.origin}/mse`, {
        transports: ['websocket'],
        forceNew: true,
        reconnection: true,
        reconnectionDelay: 500
    });
    mimeSocket.on('mime', function (data) {
        const type = data.toLowerCase();
        let message = type;
        if ('MediaSource' in window) {
            message += '\nMediaSource.isTypeSupported = ' + MediaSource.isTypeSupported(type);
        } else {
            message += '\nMediaSource not supported by browser';
        }
        const vid = document.createElement('video');
        message += '\nHTMLMediaElement.canPlayType = ' + vid.canPlayType(type);
        mime.innerText = message;
        mimeSocket.disconnect();
    });
    mimeSocket.emit('message', 'mime');
</script>
<script src="/javascripts/player.min.js"></script>
<script>
    const msePlayer = new VideoPlayer({
        video: document.getElementById('mseVideo'),
        io: io,
        namespace: 'mse',
        controls: ''
    }).start();
</script>
<script>
    const stderrArr = [];
    const stderr = document.getElementById('stderr');
    const stderrSocket = io.connect(`${location.origin}/stderr`, {
        transports: ['websocket'],
        forceNew: true,
        reconnection: true,
        reconnectionDelay: 500
    });
    stderrSocket.on('stderr', function (data) {
        stderrArr.push(data);
        while (stderrArr.length > 200) {
            stderrArr.shift();
        }
        stderr.innerText = stderrArr.join('\n');
    });
</script>
<script>
    const mp4Video = document.getElementById('mp4Video');
    mp4Video.addEventListener('error', (evt) => {
        mp4Video.parentElement.innerHTML = '<p>mp4 playback error</p>';
    });
</script>
<script>
    const mjpegImg = document.getElementById('mjpegImg');
    mjpegImg.addEventListener('error', (evt) => {
        mjpegImg.parentElement.innerHTML = '<p>mjpeg playback error</p>';
    })
</script>
</body>
</html>