<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css'/>
    <script src="/javascripts/flv.min.js"></script>
    <script src="/javascripts/hls.min.js"></script>
</head>
<body>
<p>Ffmpeg parameters: <%= params %></p>

<div>
    <p>progressive mp4</p>
    <video id="progressive" src="/mp4/test.mp4" autoplay/>
</div>

<div>
    <p>flv.js</p>
    <video id="flv"></video>
    <script>
        if (flvjs.isSupported()) {
            var videoElement = document.getElementById('flv');
            var flvPlayer = flvjs.createPlayer({
                type: 'mp4',
                url: '/mp4/test.mp4'
            });
            flvPlayer.attachMediaElement(videoElement);
            flvPlayer.load();
            flvPlayer.play();
        }
    </script>
</div>

<div>
    <p>hls.js</p>
    <video id="hls"></video>
    <script>
        if(Hls.isSupported()) {
            var video = document.getElementById('hls');
            var hls = new Hls();
            hls.loadSource('/hls/test.m3u8');
            hls.attachMedia(video);
            hls.on(Hls.Events.MANIFEST_PARSED,function() {
                video.play();
            });
        }
        // hls.js is not supported on platforms that do not have Media Source Extensions (MSE) enabled.
        // When the browser has built-in HLS support (check using `canPlayType`), we can provide an HLS manifest (i.e. .m3u8 URL) directly to the video element throught the `src` property.
        // This is using the built-in support of the plain video element, without using hls.js.
        else if (video.canPlayType('application/vnd.apple.mpegurl')) {
            video.src = '/hls/test.m3u8';
            video.addEventListener('canplay',function() {
                video.play();
            });
        }
    </script>
</div>

<br/>

<form method="POST" action="/">
    <input name="action" type="submit" value="Stop">
</form>

</body>
</html>
